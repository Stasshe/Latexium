import { parseLatex, analyze } from '../../dist/index.esm.js';

console.log('='.repeat(60));
console.log('ROOT CAUSE ANALYSIS: Why x² - 2x + 4 becomes (x - 1)²');
console.log('='.repeat(60));

// Test the exact AST that would be generated by cubic sum strategy
const testQuadratic = 'x^2 - 2*x + 4';
console.log(`\nTesting manually constructed: ${testQuadratic}`);

try {
  const parseResult = parseLatex(testQuadratic);
  const ast = parseResult.ast;
  
  if (!ast) {
    throw new Error('No AST generated');
  }
  
  console.log('AST structure:', JSON.stringify(ast, null, 2));
  
  const result = analyze(ast, { task: 'factor', variable: 'x' });
  console.log('\nFactorization result:', result.value);
  console.log('Steps:', result.steps);
  
  // Manual coefficient check
  console.log('\n' + '-'.repeat(40));
  console.log('MANUAL COEFFICIENT VERIFICATION');
  console.log('-'.repeat(40));
  
  // For x² - 2x + 4:
  const a = 1, b = -2, c = 4;
  console.log(`Coefficients: a=${a}, b=${b}, c=${c}`);
  
  // Discriminant check
  const discriminant = b * b - 4 * a * c;
  console.log(`Discriminant = b² - 4ac = (-2)² - 4(1)(4) = 4 - 16 = ${discriminant}`);
  
  if (discriminant < 0) {
    console.log('✅ CORRECT: Negative discriminant means NO real factorization possible');
  } else {
    console.log('❌ ERROR: Non-negative discriminant');
  }
  
  // Perfect square check
  const k = b / (2 * a);
  const expectedConstant = a * k * k;
  console.log(`\nPerfect square check:`);
  console.log(`k = b/(2a) = ${b}/(2*${a}) = ${k}`);
  console.log(`Expected constant = a*k² = ${a}*${k}² = ${expectedConstant}`);
  console.log(`Actual constant = ${c}`);
  console.log(`Difference = ${Math.abs(c - expectedConstant)}`);
  
  if (Math.abs(c - expectedConstant) < 1e-10) {
    console.log('❌ ERROR: This should NOT be a perfect square!');
  } else {
    console.log('✅ CORRECT: This is NOT a perfect square');
  }
  
} catch (error) {
  console.error('Error:', error);
}

console.log('\n' + '='.repeat(60));
console.log('Testing known perfect square: x² - 2x + 1 = (x - 1)²');
console.log('='.repeat(60));

try {
  const perfectSquare = 'x^2 - 2*x + 1';
  console.log(`\nTesting: ${perfectSquare}`);
  
  const parseResult = parseLatex(perfectSquare);
  const ast = parseResult.ast;
  
  if (!ast) {
    throw new Error('No AST generated');
  }
  
  const result = analyze(ast, { task: 'factor', variable: 'x' });
  console.log('Factorization result:', result.value);
  
  // Manual verification
  const a = 1, b = -2, c = 1;
  const discriminant = b * b - 4 * a * c;
  console.log(`Discriminant = ${discriminant} (should be 0 for perfect square)`);
  
  const k = b / (2 * a);
  const expectedConstant = a * k * k;
  console.log(`Expected vs Actual constant: ${expectedConstant} vs ${c}`);
  
} catch (error) {
  console.error('Error:', error);
}